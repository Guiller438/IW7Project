@model IEnumerable<IW7PP.Models.Cliente.LifeStyle>

@{
    ViewData["Title"] = "Administración de estilos de vida";
}

<h1 class="text-center my-4">Administración de estilos de vida</h1>

<div class="container mb-5 pb-5">
    <div class="row mb-3">
        <div class="col-sm-3 offset-sm-9">
            <a asp-action="CreateStyle" asp-controller="LifeStyle" class="btn btn-primary w-100">Crear Nuevo estilo</a>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-sm-3">
            <a asp-action="Index" asp-controller="Cliente"class="btn btn-secondary w-100">Página Cliente</a>
        </div>
    </div>
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Lista de estilos de vida</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                @if (Model.Any())
                {
                    <table class="table table-bordered table-striped" id="tablaEstilos" width="100%" cellspacing="0">
                        <thead class="thead-light">
                            <tr>
                                <th>Id</th>
                                <th>Nombre del estilo de vida</th>
                                <th>Descripción</th>
                                <th>Promedio de desgaste</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(m => item.Id)</td>
                                    <td>@Html.DisplayFor(m => item.Name)</td>
                                    <td>@Html.DisplayFor(m => item.Description)</td>
                                    <td>@Html.DisplayFor(m => item.promedioDesgaste)</td>
                                    <td>
                                        <div class="btn-group" role="group" aria-label="Acciones">
                                            <a class="btn btn-sm btn-primary" asp-controller="LifeStyle" asp-action="EditStyle" asp-route-id="@item.Id">Editar</a>
<<<<<<< HEAD
                                            <form asp-controller="LifeStyle" asp-action="DeleteStyle" asp-route-id="@item.Id" class="d-inline-block" method="post">
=======
                                            <form asp-action="DeleteStyle" asp-route-id="@item.Id" class="d-inline-block" method="post">
>>>>>>> dd4246d5aaf16d5e50bee8b9cc5513e6243ce7c4
                                                <button type="submit" onclick="return confirm('¿Está seguro de borrar este registro?')" class="btn btn-sm btn-danger">Borrar</button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-center">No hay registros</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var table = $('#tablaEstilos').DataTable({
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
                    "infoEmpty": "Mostrando 0 a 0 de 0 entradas",
                    "infoFiltered": "(filtrado de _MAX_ entradas totales)",
                    "infoPostFix": "",
                    "thousands": ",",
                    "lengthMenu": "Mostrar _MENU_ entradas",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "No se encontraron registros coincidentes",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });

            $('#previousPage').on('click', function () {
                table.page('previous').draw('page');
            });
        });
    </script>
}
